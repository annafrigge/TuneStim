function [InitialSolution_clean] = load_comsol_solution(pat_path,hand,unit,lead,nThreads)
    % loads the initial solutions generated by comsol for each contact
    % configuration in contact_names. Returns a struct with fields
    % corresponding to the configurations. The struct values are 1x8
    % doubles with the electrical field values

    % Input Arguments
    % ---------------
    % path_path :   str, the path to the patient directory
    % hand :    str, left (sin) or right (dx) brain hemisphere
    % unit :    str, the stimulation amplitude of the comsol model

    % Output Arguments
    % ----------------
    % InitialSolution :     struct with fields corresponding to the
    %                       different contact configurations. Each struct 
    %                       consists of 1x8 doubles containing the E-field 
    %                       data:  x,y,z,V,Ex,Ey,Ez,Enorm


    disp('load Comsol solution')

    path = append(pat_path,'EFdistribution_',hand,'_',unit,'/');

    if strcmp(lead,'Boston Scientific 2202') || strcmp(lead,'S:t Jude 1331')
        % coupling combinations (H=Horizontal combination, V=Vertical combination)
        contact_strings = ['Mono_1X'; 'Mono_2A'; 'Mono_2B'; 'Mono_2C'; 'Mono_3A';...
                 'Mono_3B'; 'Mono_3C'; 'Mono_4X';...
                 'H_2A_2B'; 'H_2B_2C'; 'H_2C_2A'; 'H_3A_3B'; 'H_3B_3C';...
                 'H_3C_3A'; ...
                 'V_2A_3A'; 'V_2B_3B'; 'V_2C_3C';...
                 'Ring_R2'; 'Ring_R3';...
                 'C1X_C2A';'C1X_C2B';'C1X_C2C';...
                 'C4X_C3A';'C4X_C3B';'C4X_C3C';...
                 'C2A_C3B';'C2A_C3C';'C2B_C3A';...
                 'C2B_C3C';'C2C_C3A';'C2C_C3B'];
    elseif strcmp(lead,'Boston Scientific Vercise Cartesia')
        contact_strings = ['Mono_1X'; 'Mono_2A'; 'Mono_2B'; 'Mono_2C'; 'Mono_3A';...
            'Mono_3B'; 'Mono_3C'; 'Mono_4X';...
            'Duo_1_2'; 'Duo_2_3'; 'Duo_3_4'; 'Duo_4_5'; 'Duo_5_6';...
            'Duo_6_7'; 'Duo_7_8'];
    end

    N = length(contact_strings);
    names = cell(1,N);
    cleaned_values = cell(1,N);
 
    parfor(i=1:N,nThreads)
        filepath = append(path,'V_EF_cont_',contact_strings(i,:),'_',hand,'_',unit,'_gnd.csv');
        names{i} = sprintf(contact_strings(i,:));
        values=readmatrix(filepath,'Delimiter',',','OutputType','double')
        cleaned_values{i} =rmmissing(values);
    end

    InitialSolution_clean = cell2struct(cleaned_values,names,2);

end

